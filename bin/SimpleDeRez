#!/usr/bin/env python3

import argparse
import macresources
import sys

parser = argparse.ArgumentParser(description='''
    Decompile legacy Mac resources to the Rez language. The output will
    always be compatible with Apple Rez, and unless an option
    marked below with [!] is used, the output will match Apple DeRez.
    No attempt is made to access the native Mac resource
    fork, but this can be worked around by appending `/..namedfork/rsrc'
    to the name of the input file.
''')

parser.add_argument('resourceFile', help='file to be decompiled')
parser.add_argument('-ascii', action='store_true', help='[!] guarantee ASCII output')
parser.add_argument('-useDF', action='store_true', help='ignored: data fork is always used')

args = parser.parse_args()

with open(args.resourceFile, 'rb') as f:
    resources = macresources.parse_file(f.read())

try:
	rez = macresources.make_rez_code(resources, ascii_clean=args.ascii)
	sys.stdout.buffer.write(rez)
except BrokenPipeError:
	pass # like we get when we pipe into head
